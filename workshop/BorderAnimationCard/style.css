/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
    box-sizing: border-box;
}

/*
    2. Remove default margin
  */
* {
    margin: 0;
    padding: 0;
}

/*
    Typographic tweaks!
    3. Add accessible line-height
    4. Improve text rendering
  */
body {
    -webkit-font-smoothing: antialiased;
    font-family: 'Overpass', sans-serif;
    min-height: 100vh;
    background-color: rgb(50, 50, 50);
    color: white;
    display: grid;
    justify-content: center;
    align-items: center;
}

/*
    5. Improve media defaults
  */
img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
}

/*
    6. Remove built-in form typography styles
  */
input,
button,
textarea,
select {
    font: inherit;
}

/*
    7. Avoid text overflows
  */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}

/*
    8. Create a root stacking context
  */
#root,
#__next {
    isolation: isolate;
}

.card-container {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
}

.card,
.card-content {
    --_border-radius: 2rem;
    --_width: 25rem;
    --_height: 40rem;
    position: relative;
    display: flex;
    background-color: black;
    align-items: center;
    justify-content: center;
    width: var(--_width);
    height: var(--_height);
    border-radius: var(--_border-radius);
    overflow: hidden;
}


.card1>h1,
.card2 .card-content>h1,
.card3 .card-content>h1 {
    font-size: 10rem;
    padding: 0;
    margin: 0;
    text-shadow: 4px 4px rgb(238, 148, 148);
    z-index: 1;
}

.card3 {
    --_open-direction: 1;
    --_animate-delate: 250ms;
}

.card1::before {
    content: '';
    position: absolute;
    width: 20rem;
    height: calc(var(--_height) * 1.3);
    background: linear-gradient(rgb(127, 0, 0), rgb(0, 140, 255));
    animation: rotate 4s linear infinite;
}

.card1::after,
.card2::after,
.card3::after {
    content: '';
    position: absolute;
    inset: .4rem;
    border-radius: var(--_border-radius);
    background-color: rgb(17, 7, 40);
}

.card2>.card-content::before {
    content: '';
    position: absolute;
    width: 10rem;
    height: calc(var(--_height) * 1.3);
    background: linear-gradient(rgb(1, 58, 82), rgb(0, 140, 255));
    animation: rotate 4s linear infinite;
}

.card2>.card-content::after {
    content: '';
    position: absolute;
    width: calc(var(--_height) * 1.3);
    height: 10rem;
    background: linear-gradient(rgb(127, 0, 0), rgb(255, 74, 74));
    animation: rotate 4s linear infinite;
}


.card3>.card-content::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    transform: translateX(50%);
    scale: 1;
    transition: scale var(--_animate-delate) linear, transform var(--_animate-delate) linear var(--_animate-delate);
    background: linear-gradient(rgb(127, 0, 0), rgb(0, 140, 255));
}

.card3>.card-content::after {
    --_open-direction: -1;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    transform: translateX(-50%);
    scale: 1;
    transition: scale var(--_animate-delate) linear, transform var(--_animate-delate) linear var(--_animate-delate);
    background: linear-gradient(rgb(127, 0, 0), rgb(0, 140, 255));
}

.card3:is(:hover, :focus) .card-content::after,
.card3:is(:hover, :focus) .card-content::before {
    scale: 1 0;
    transform: translateX(calc(95% * var(--_open-direction)));
    transition: scale var(--_animate-delate) linear var(--_animate-delate), transform var(--_animate-delate) linear;
}

@keyframes rotate {
    form {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

@keyframes open {
    0% {
        transform: translateX(calc(50% * var(--_open-direction)));
    }

    50% {
        transform: translateX(calc(95% * var(--_open-direction)));
        transform: scale(1, 1);
    }

    100% {
        transform: scale(1, 0);
    }


}