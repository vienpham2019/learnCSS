.item {
    border: 5px red solid;
    /* width: 100px; */
    /* height: 100px; */
    /* background-color: black; */
    /* color: white; */
    /* text-align: center; */
}

.container {
    border: 1px solid black;
    display: grid;
    /* grid have 6 columns and rows each have 100px width and height */
    /* grid-template-columns: 100px 100px 100px 100px 100px 100px;
    grid-template-rows: 100px 100px 100px 100px 100px 100px; */

    /* grid-template-columns: 100px  minmax(100px , 3fr) 100px;
    grid-template-rows: repeat(2 , 100px); */

    /* grid-template-rows: 100px  300px 100px;
    grid-template-columns: 3fr 1fr;
    grid-template-areas: 
        "header header"
        "main aside"
        "footer footer"
    ; */

    grid-template-rows: repeat(4, 100px);
    /* auto-fit will auto change number of column */
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    /* set x axis  */
    /* justify-items: end; */
    /* set y axis  */
    /* align-items: start; */

}

.item1 {
    /* grid-area: header; */
    /* justify-self: stretch; */
    /* align-self: center; */
}

.item2 {
    /* grid-area: main; */
}

.item3 {
    /* grid-area: aside; */
}

.item4 {
    /* grid-area: footer; */
}

/* .item1{ */
/* grid-row-start: 1;
    grid-row-end: 5;
    grid-column-start: 1;
    grid-column-end: 3; */

/* this is a short cut for defind grid column and row  */
/* item need to not defind width and height */
/* grid-row: 1 / 3;
    grid-column: 1 / 7; */
/* } */

/* .item2{ */
/* using span keyword for better way for grid  */
/* this mean from current row and column span 2 for both way  */
/* grid-row: span 2;
    grid-column: span 2; */

/* grid-area: 2 / 4 / 4 / 6;
    z-index: 1; */
/* } */

/* .item3{ */
/* grid-area: row-start / col-start / row-end / colmn-end ; */
/* grid area is combine of grid row and colmn */
/* use -1 for max grid row and colmn  */
/* grid-area: 3 / 1 / 7 / 7;  */
/* } */

/* --------------------------- */

.container2 {
    border: 1px solid rgb(0, 195, 255);
    width: 90%;
    margin: 40px auto;
    display: grid;
    gap: 1rem;

    grid-template-areas:
        'one one two five'
        'three four four five'
    ;

    /* grid will add new row if new item come in so only use it when it fix item */
    /* grid-template-rows: repeat(2, 1fr); */
}

.content:first-child {
    background-color: antiquewhite;
    grid-area: one;
}

.content:nth-child(2) {
    background-color: rgb(177, 177, 177);
    grid-area: two;
}

.content:nth-child(3) {
    background-color: rgb(20, 20, 58);
    color: white;
    grid-area: three;
}

.content:nth-child(4) {
    background-color: rgb(248, 193, 193);
    grid-area: four;
}

.content:nth-child(5) {
    background-color: rgb(128, 4, 128);
    grid-area: five;
}

@media (max-width: 1411px) {
    .container2 {
        grid-template-areas:
            'one one'
            'two three'
            'four three'
            'four five'
        ;
    }
}


@media (max-width: 936px) {
    .container2 {
        grid-template-areas:
            'one'
            'two'
            'three'
            'four'
            'five'
        ;
    }
}



.content {
    padding: 40px;
    border-radius: 5px;
}

.content span,
small {
    display: block;
    margin: 20px 0;
}

.content .title {
    font-size: 20px;
    font-weight: bold;
    margin-bottom: 20px;
}